{"version":3,"sources":["components/weatherGifs.js","components/Display.js","components/weather-fetch.js","components/Form.js","components/App.js","index.js"],"names":["weatherGifs","Thunderstorm","Drizzle","Rain","Snow","Mist","Smoke","Haze","Dust","Fog","Sand","Ash","Squall","Tornado","Clear","Clouds","Display","props","data","city","tempCurrent","tempFeelsLike","tempMax","tempMin","description","mainDescription","iconURL","id","className","style","src","opacity","alt","weatherURL","processData","formatTempKToC","main","temp_min","temp_max","temp","feels_like","weather","icon","kalvin","toFixed","a","url","fetch","mode","response","json","weatherData","processedData","getProperties","Form","handleSubmit","e","preventDefault","state","properties","setData","console","log","err","setState","valid","initialState","handleChange","bind","this","target","value","onSubmit","name","type","onChange","required","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d818c15b.chunk.js","sourcesContent":["const weatherGifs = {\n    Thunderstorm: 'https://media2.giphy.com/media/QuGHBsYciDZzG/giphy.gif?cid=ee256ecfbb9f9d2b9cae968708081035294de987192ebdb9&rid=giphy.gif',\n    Drizzle: 'https://media3.giphy.com/media/n0Zt16UrMKNFu/200.webp?cid=ecf05e477vw4w4jqte2b9m7j5quhwgs5cz1h9yysoosgr4c2&rid=200.webp',\n    Rain: 'https://media1.giphy.com/media/xTcnT45z6H5gxFYZZS/200w.webp?cid=ecf05e47kje45ahbkckex0lw18xx2gy970qouvr9uab0q563&rid=200w.webp',\n    Snow: 'https://media1.giphy.com/media/6YNgoTEPs6vZe/200.webp?cid=ecf05e47o5gedncvasosnlwn9e5lvay12y1r66vycjx1ap3d&rid=200.webp',\n    Mist: 'https://media4.giphy.com/media/McDhCoTyRyLiE/giphy.webp?cid=ecf05e47hrfxnwnkxvc0yu34jvz44vq3xeytxwnk04eniivd&rid=giphy.webp',\n    Smoke: 'https://media3.giphy.com/media/QkqRmtkDhXCeI/100.webp?cid=ecf05e47a8qp3xz81n4d0v7cb6acmkg1kagqea7cu7njs5kz&rid=100.webp',\n    Haze: 'https://media4.giphy.com/media/dgeIH5RPynA6Q/200w.webp?cid=ecf05e47di3irwun4jvqxcwyi6hdx74t329j3l7xjgxhkxub&rid=200w.webp',\n    Dust: 'https://media0.giphy.com/media/13EcyyHJAFuxUc/200w.webp?cid=ecf05e470f4b6v53fqffic6mit1dse1ixgw20x4yz3d0gq0i&rid=200w.webp',\n    Fog: 'https://media4.giphy.com/media/ZWRCWdUymIGNW/200w.webp?cid=ecf05e47hxvxjsfavj7kkzo667ee7whjshz4uia252szcvu4&rid=200w.webp',\n    Sand: 'https://media1.giphy.com/media/rJa1pXoPhYjGU/200w.webp?cid=ecf05e47gx9uyctp3twauwe61ezaok103wp2v9ubs8smovew&rid=200w.webp',\n    Ash: 'https://media4.giphy.com/media/7ISIRaCMrgFfa/200.webp?cid=ecf05e47fz2gmxyyuexuz3n745ramokdrvpl5hg7aty0x2e4&rid=200.webp',\n    Squall: 'https://media2.giphy.com/media/QAy9fEGI7tzSqXLuFg/200w.webp?cid=ecf05e47y0yutqrd8cwur9i8tfe2kayc2juksdfiwtkb55ez&rid=200w.webp',\n    Tornado: 'https://media3.giphy.com/media/68FsmDsSBACTC/200w.webp?cid=ecf05e47cn14eqb7c4rhy6wv8k7kjwdkbw6bpqvsmac6uz8e&rid=200w.webp',\n    Clear: 'https://media1.giphy.com/media/fegWjbjJcEdzO/giphy.webp?cid=ecf05e47hs5vyiabk20af1odjrgsrwhmsv142dg6bduoxddc&rid=giphy.webp',\n    Clouds: 'https://media1.giphy.com/media/5HK4TiiBeLSZq/giphy.webp?cid=ecf05e472w70i09ojlxh1hi7k6ph797orwnzgzzzo07v4mcl&rid=giphy.webp',\n}\n\nexport { weatherGifs }","import React from 'react';\n\nimport { weatherGifs } from './weatherGifs';\n\nconst Display = (props) => {\n    const {\n      city,\n      tempCurrent,\n      tempFeelsLike,\n      tempMax,\n      tempMin,\n      description,\n      mainDescription,\n      iconURL\n    } = props.data;\n  \n  \n    return (\n        <div>\n            {city && \n                <div id='statsDisplay'>\n                <h2>{city}</h2>\n                <div className='weather-graphic' style={{'backgroundImage': `url(${weatherGifs[mainDescription]})`}}>\n                    <img src={iconURL} style={{opacity: 1}} alt='weather icon'></img>\n                </div>\n                <p>{description}</p>\n                <p>Temperature: {tempCurrent}</p>\n                <p>Feels like: {tempFeelsLike}</p>\n                <p>Max: {tempMax}</p>\n                <p>Min: {tempMin}</p>\n                </div>\n            }\n        </div>\n\n    )\n  }\n\n\n  export { Display }","const weatherURL = (city) => `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=b3bd6f49f5db753d46c6a24720f1fda7`;\n\nconst processData = (data) => {\n  return {\n      tempMin: formatTempKToC(data.main.temp_min),\n      tempMax: formatTempKToC(data.main.temp_max),\n      tempCurrent: formatTempKToC(data.main.temp),\n      tempFeelsLike: formatTempKToC(data.main.feels_like),\n      mainDescription: data.weather[0].main,\n      description: data.weather[0].description,\n      iconURL: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\n  }\n}\n\nconst formatTempKToC = (kalvin) => (kalvin - 273.15).toFixed(1) + ' ËšC';\n\nasync function getProperties(city) {\n    const url = weatherURL(city);\n    const response = await fetch(url, {mode: 'cors'});\n    const weatherData = await response.json();\n    const processedData = processData(weatherData);\n    return processedData\n}\n\nexport default getProperties;\n","import React from 'react';\n\nimport getProperties from './weather-fetch';\n\nclass Form extends React.Component {\n    constructor(props) {\n      super(props);\n      this.initialState = {\n        city: '',\n        valid: true,\n      };\n      this.state = {...this.initialState};\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(e) {\n      if (!this.state.valid) {\n        this.setState({valid: true})\n      }\n      this.setState({city: e.target.value})\n    }\n  \n    handleSubmit = async (e) => {\n      e.preventDefault()\n      try {\n        const properties = await getProperties(this.state.city);\n        const city = this.state.city;\n        this.props.setData({city, ...properties});\n      } catch(err) {\n        console.log({err, })\n        this.setState({valid: false})\n      }\n      this.setState({city: this.initialState.city});\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            City: \n            <input \n              name='city'\n              type='text'\n              onChange={this.handleChange}\n              value={this.state.city}\n              required\n            />\n            </label>\n            <input type='submit' value='Check'/>\n              {this.state.valid === false && \n                <div id='invalidCity'>\n                  Invalid Request\n                </div>\n              }\n\n        </form>\n      )\n    }\n  }\n\n\n  export { Form }","import React from 'react';\n\nimport { Display } from './Display';\nimport { Form } from './Form';\n\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.initialState = {\n        city: '',\n        tempCurrent: '',\n        tempFeelsLike: '',\n        tempMax: '',\n        tempMin: '',\n        description: '',\n        mainDescription: '',\n      }\n      this.state = {...this.initialState};\n      this.setData = this.setData.bind(this);\n    }\n  \n    setData({...data}) {\n      this.setState({...data})\n    }\n  \n    render() {\n      return (\n        <div>\n            <h1>Weather App</h1>\n            <div className='app container'>\n            <Display data={this.state}/>\n            <Form setData={this.setData}/>\n            </div>\n        </div>\n      );\n    }\n  }\n\n  export { App }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { App } from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className='body container'>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}