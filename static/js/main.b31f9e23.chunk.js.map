{"version":3,"sources":["weather-fetch.js","index.js"],"names":["weatherURL","city","processData","data","tempMin","formatTempKToC","main","temp_max","tempMax","temp_min","tempCurrent","temp","tempFeelsLike","feels_like","description","weather","iconURL","icon","kalvin","toFixed","a","url","fetch","mode","response","json","weatherData","processedData","getProperties","Form","props","submitData","state","properties","setData","console","log","err","setState","valid","initialState","handleChange","bind","e","this","target","value","id","name","type","onChange","required","onClick","React","Component","Display","src","alt","className","Weather","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAAMA,G,MAAa,SAACC,GAAD,kEAA+DA,EAA/D,6CAEbC,EAAc,SAACC,GACnB,MAAO,CACHC,QAASC,EAAeF,EAAKG,KAAKC,UAClCC,QAASH,EAAeF,EAAKG,KAAKG,UAClCC,YAAaL,EAAeF,EAAKG,KAAKK,MACtCC,cAAeP,EAAeF,EAAKG,KAAKO,YACxCC,YAAaX,EAAKY,QAAQ,GAAGD,YAC7BE,QAAQ,oCAAD,OAAsCb,EAAKY,QAAQ,GAAGE,KAAtD,aAIPZ,EAAiB,SAACa,GAAD,OAAaA,EAAS,QAAQC,QAAQ,GAAK,Y,4CAElE,WAA6BlB,GAA7B,qBAAAmB,EAAA,6DACUC,EAAMrB,EAAWC,GAD3B,SAE2BqB,MAAMD,EAAK,CAACE,KAAM,SAF7C,cAEUC,EAFV,gBAG8BA,EAASC,OAHvC,cAGUC,EAHV,OAIUC,EAAgBzB,EAAYwB,GAJtC,kBAKWC,GALX,4C,sBAQeC,M,4CChBTC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAiBRC,WAlBmB,sBAkBN,8BAAAX,EAAA,+EAEgBQ,EAAc,EAAKI,MAAM/B,MAFzC,OAEHgC,EAFG,OAGHhC,EAAO,EAAK+B,MAAM/B,KACxB,EAAK6B,MAAMI,QAAX,aAAoBjC,QAASgC,IAJpB,gDAMTE,QAAQC,IAAI,CAACC,IAAG,OAChB,EAAKC,SAAS,CAACC,OAAO,IAPb,yDAhBX,EAAKC,aAAe,CAClBvC,KAAM,GACNsC,OAAO,GAET,EAAKP,MAAL,eAAiB,EAAKQ,cACtB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBARD,E,yDAWNC,GACNC,KAAKZ,MAAMO,OACdK,KAAKN,SAAS,CAACC,OAAO,IAExBK,KAAKN,SAAS,CAACrC,KAAM0C,EAAEE,OAAOC,U,+BAe9B,OACE,0BAAMC,GAAG,YACP,uCAEE,2BACEC,KAAK,OACLC,KAAK,OACLC,SAAUN,KAAKH,aACfU,UAAQ,IAGV,2BACEF,KAAK,SACLH,MAAM,SACNM,QAASR,KAAKb,cAGQ,IAArBa,KAAKZ,MAAMO,OACV,yBAAKQ,GAAG,eAAR,yB,GAjDKM,IAAMC,WA2DnBC,EAAU,SAACzB,GAAW,IAAD,EASrBA,EAAM3B,KAPRF,EAFuB,EAEvBA,KACAS,EAHuB,EAGvBA,YACAE,EAJuB,EAIvBA,cACAJ,EALuB,EAKvBA,QACAJ,EANuB,EAMvBA,QACAU,EAPuB,EAOvBA,YACAE,EARuB,EAQvBA,QAGF,OAAIf,EAKF,yBAAK8C,GAAG,gBACN,2BAAI9C,GACJ,yBAAKuD,IAAKxC,EAASyC,IAAI,iBACvB,uBAAGC,UAAU,QAAQ5C,GACrB,2CAAiBJ,GACjB,0CAAgBE,GAChB,mCAASJ,GACT,mCAASJ,IAXJ,MAiBLuD,E,kDACJ,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACDU,aAAe,CAClBvC,KAAM,GACNS,YAAa,GACbE,cAAe,GACfJ,QAAS,GACTJ,QAAS,GACTU,YAAa,IAEf,EAAKkB,MAAL,eAAiB,EAAKQ,cACtB,EAAKN,QAAU,EAAKA,QAAQQ,KAAb,gBAXE,E,uDAcC,IAARvC,EAAO,oBACjByC,KAAKN,SAAL,eAAkBnC,M,+BAIlB,OACE,6BACE,2CACA,kBAAC,EAAD,CAASA,KAAMyC,KAAKZ,QACpB,kBAAC,EAAD,CAAME,QAASU,KAAKV,e,GAxBNmB,IAAMC,WA+B5BM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b31f9e23.chunk.js","sourcesContent":["const weatherURL = (city) => `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=b3bd6f49f5db753d46c6a24720f1fda7`;\n\nconst processData = (data) => {\n  return {\n      tempMin: formatTempKToC(data.main.temp_max),\n      tempMax: formatTempKToC(data.main.temp_min),\n      tempCurrent: formatTempKToC(data.main.temp),\n      tempFeelsLike: formatTempKToC(data.main.feels_like),\n      description: data.weather[0].description,\n      iconURL: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\n  }\n}\n\nconst formatTempKToC = (kalvin) => (kalvin - 273.15).toFixed(1) + ' ËšC';\n\nasync function getProperties(city) {\n    const url = weatherURL(city);\n    const response = await fetch(url, {mode: 'cors'});\n    const weatherData = await response.json();\n    const processedData = processData(weatherData);\n    return processedData\n}\n\nexport default getProperties;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport getProperties from './weather-fetch'\n\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      city: '',\n      valid: true,\n    };\n    this.state = {...this.initialState};\n    this.handleChange = this.handleChange.bind(this);\n    this.submitData = this.submitData.bind(this);\n  }\n\n  handleChange(e) {\n    if (!this.state.valid) {\n      this.setState({valid: true})\n    }\n    this.setState({city: e.target.value})\n  }\n\n  submitData = async () => {\n    try {\n      const properties = await getProperties(this.state.city);\n      const city = this.state.city;\n      this.props.setData({city, ...properties});\n    } catch(err) {\n      console.log({err, })\n      this.setState({valid: false})\n    }\n  }\n\n  render() {\n    return (\n      <form id='cityForm'>\n        <label>\n          City: \n          <input \n            name='city'\n            type='text'\n            onChange={this.handleChange}\n            required\n          >\n          </input>\n          <input \n            type='button' \n            value='Submit' \n            onClick={this.submitData}\n            >\n            </input>\n            {this.state.valid === false && \n              <div id='invalidCity'>\n                Invalid Request\n              </div>\n            }\n        </label>\n      </form>\n    )\n  }\n}\n\nconst Display = (props) => {\n  const {\n    city,\n    tempCurrent,\n    tempFeelsLike,\n    tempMax,\n    tempMin,\n    description,\n    iconURL\n  } = props.data;\n\n  if(!city) {\n    return null\n  }\n\n  return (\n    <div id='statsDisplay'>\n      <p>{city}</p>\n      <img src={iconURL} alt='weather icon'></img>\n      <p className='city'>{description}</p>\n      <p>Temperature: {tempCurrent}</p>\n      <p>Feels like: {tempFeelsLike}</p>\n      <p>Max: {tempMax}</p>\n      <p>Min: {tempMin}</p>\n    </div>\n  )\n}\n\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      city: '',\n      tempCurrent: '',\n      tempFeelsLike: '',\n      tempMax: '',\n      tempMin: '',\n      description: ''\n    }\n    this.state = {...this.initialState};\n    this.setData = this.setData.bind(this);\n  }\n\n  setData({...data}) {\n    this.setState({...data})\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Weather App</h1>\n        <Display data={this.state}/>\n        <Form setData={this.setData}/>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Weather />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}