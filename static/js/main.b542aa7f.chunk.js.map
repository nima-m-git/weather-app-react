{"version":3,"sources":["components/Display.js","components/weather-fetch.js","components/Form.js","components/App.js","index.js"],"names":["Display","props","data","city","tempCurrent","tempFeelsLike","tempMax","tempMin","description","iconURL","id","src","alt","className","weatherURL","processData","formatTempKToC","main","temp_max","temp_min","temp","feels_like","weather","icon","kalvin","toFixed","a","url","fetch","mode","response","json","weatherData","processedData","getProperties","Form","submitData","state","properties","setData","console","log","err","setState","valid","initialState","handleChange","bind","e","this","target","value","name","type","onChange","required","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAEMA,EAAU,SAACC,GAAW,IAAD,EASnBA,EAAMC,KAPRC,EAFqB,EAErBA,KACAC,EAHqB,EAGrBA,YACAC,EAJqB,EAIrBA,cACAC,EALqB,EAKrBA,QACAC,EANqB,EAMrBA,QACAC,EAPqB,EAOrBA,YACAC,EARqB,EAQrBA,QAGF,OAAIN,EAKF,yBAAKO,GAAG,gBACN,2BAAIP,GACJ,yBAAKQ,IAAKF,EAASG,IAAI,iBACvB,uBAAGC,UAAU,QAAQL,GACrB,2CAAiBJ,GACjB,0CAAgBC,GAChB,mCAASC,GACT,mCAASC,IAXJ,M,uBCdPO,EAAa,SAACX,GAAD,kEAA+DA,EAA/D,4CAEbY,EAAc,SAACb,GACnB,MAAO,CACHK,QAASS,EAAed,EAAKe,KAAKC,UAClCZ,QAASU,EAAed,EAAKe,KAAKE,UAClCf,YAAaY,EAAed,EAAKe,KAAKG,MACtCf,cAAeW,EAAed,EAAKe,KAAKI,YACxCb,YAAaN,EAAKoB,QAAQ,GAAGd,YAC7BC,QAAQ,oCAAD,OAAsCP,EAAKoB,QAAQ,GAAGC,KAAtD,aAIPP,EAAiB,SAACQ,GAAD,OAAaA,EAAS,QAAQC,QAAQ,GAAK,Y,4CAElE,WAA6BtB,GAA7B,qBAAAuB,EAAA,6DACUC,EAAMb,EAAWX,GAD3B,SAE2ByB,MAAMD,EAAK,CAACE,KAAM,SAF7C,cAEUC,EAFV,gBAG8BA,EAASC,OAHvC,cAGUC,EAHV,OAIUC,EAAgBlB,EAAYiB,GAJtC,kBAKWC,GALX,4C,sBAQeC,M,4CCnBTC,E,kDACF,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IAiBRmC,WAlBmB,sBAkBN,8BAAAV,EAAA,+EAEgBQ,EAAc,EAAKG,MAAMlC,MAFzC,OAEHmC,EAFG,OAGHnC,EAAO,EAAKkC,MAAMlC,KACxB,EAAKF,MAAMsC,QAAX,aAAoBpC,QAASmC,IAJpB,gDAMTE,QAAQC,IAAI,CAACC,IAAG,OAChB,EAAKC,SAAS,CAACC,OAAO,IAPb,QASX,EAAKD,SAAL,eAAkB,EAAKE,eATZ,yDAhBX,EAAKA,aAAe,CAClB1C,KAAM,GACNyC,OAAO,GAET,EAAKP,MAAL,eAAiB,EAAKQ,cACtB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBARD,E,yDAWNC,GACNC,KAAKZ,MAAMO,OACdK,KAAKN,SAAS,CAACC,OAAO,IAExBK,KAAKN,SAAS,CAACxC,KAAM6C,EAAEE,OAAOC,U,+BAgB9B,OACE,0BAAMzC,GAAG,YACP,uCAEE,2BACE0C,KAAK,OACLC,KAAK,OACLC,SAAUL,KAAKH,aACfK,MAAOF,KAAKZ,MAAMlC,KAClBoD,UAAQ,IAGV,2BACEF,KAAK,SACLF,MAAM,SACNK,QAASP,KAAKb,cAGQ,IAArBa,KAAKZ,MAAMO,OACV,yBAAKlC,GAAG,eAAR,yB,GAnDG+C,IAAMC,WCEnBC,E,kDACF,WAAY1D,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,aAAe,CAClB1C,KAAM,GACNC,YAAa,GACbC,cAAe,GACfC,QAAS,GACTC,QAAS,GACTC,YAAa,IAEf,EAAK6B,MAAL,eAAiB,EAAKQ,cACtB,EAAKN,QAAU,EAAKA,QAAQQ,KAAb,gBAXE,E,uDAcC,IAAR7C,EAAO,oBACjB+C,KAAKN,SAAL,eAAkBzC,M,+BAIlB,OACE,yBAAKW,UAAU,iBACb,2CACA,kBAAC,EAAD,CAASX,KAAM+C,KAAKZ,QACpB,kBAAC,EAAD,CAAME,QAASU,KAAKV,e,GAxBZkB,IAAMC,WCCxBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,yBAAKjD,UAAU,kBACb,kBAAC,EAAD,QAGJkD,SAASC,eAAe,W","file":"static/js/main.b542aa7f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Display = (props) => {\n    const {\n      city,\n      tempCurrent,\n      tempFeelsLike,\n      tempMax,\n      tempMin,\n      description,\n      iconURL\n    } = props.data;\n  \n    if(!city) {\n      return null\n    }\n  \n    return (\n      <div id='statsDisplay'>\n        <p>{city}</p>\n        <img src={iconURL} alt='weather icon'></img>\n        <p className='city'>{description}</p>\n        <p>Temperature: {tempCurrent}</p>\n        <p>Feels like: {tempFeelsLike}</p>\n        <p>Max: {tempMax}</p>\n        <p>Min: {tempMin}</p>\n      </div>\n    )\n  }\n\n\n  export { Display }","const weatherURL = (city) => `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=b3bd6f49f5db753d46c6a24720f1fda7`;\n\nconst processData = (data) => {\n  return {\n      tempMin: formatTempKToC(data.main.temp_max),\n      tempMax: formatTempKToC(data.main.temp_min),\n      tempCurrent: formatTempKToC(data.main.temp),\n      tempFeelsLike: formatTempKToC(data.main.feels_like),\n      description: data.weather[0].description,\n      iconURL: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\n  }\n}\n\nconst formatTempKToC = (kalvin) => (kalvin - 273.15).toFixed(1) + ' ËšC';\n\nasync function getProperties(city) {\n    const url = weatherURL(city);\n    const response = await fetch(url, {mode: 'cors'});\n    const weatherData = await response.json();\n    const processedData = processData(weatherData);\n    return processedData\n}\n\nexport default getProperties;\n","import React from 'react';\n\nimport getProperties from './weather-fetch';\n\nclass Form extends React.Component {\n    constructor(props) {\n      super(props);\n      this.initialState = {\n        city: '',\n        valid: true,\n      };\n      this.state = {...this.initialState};\n      this.handleChange = this.handleChange.bind(this);\n      this.submitData = this.submitData.bind(this);\n    }\n  \n    handleChange(e) {\n      if (!this.state.valid) {\n        this.setState({valid: true})\n      }\n      this.setState({city: e.target.value})\n    }\n  \n    submitData = async () => {\n      try {\n        const properties = await getProperties(this.state.city);\n        const city = this.state.city;\n        this.props.setData({city, ...properties});\n      } catch(err) {\n        console.log({err, })\n        this.setState({valid: false})\n      }\n      this.setState({...this.initialState});\n    }\n  \n    render() {\n      return (\n        <form id='cityForm'>\n          <label>\n            City: \n            <input \n              name='city'\n              type='text'\n              onChange={this.handleChange}\n              value={this.state.city}\n              required\n            >\n            </input>\n            <input \n              type='button' \n              value='Submit' \n              onClick={this.submitData}\n              >\n              </input>\n              {this.state.valid === false && \n                <div id='invalidCity'>\n                  Invalid Request\n                </div>\n              }\n          </label>\n        </form>\n      )\n    }\n  }\n\n\n  export { Form }","import React from 'react';\n\nimport { Display } from './Display';\nimport { Form } from './Form';\nimport getProperties from './weather-fetch';\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.initialState = {\n        city: '',\n        tempCurrent: '',\n        tempFeelsLike: '',\n        tempMax: '',\n        tempMin: '',\n        description: ''\n      }\n      this.state = {...this.initialState};\n      this.setData = this.setData.bind(this);\n    }\n  \n    setData({...data}) {\n      this.setState({...data})\n    }\n  \n    render() {\n      return (\n        <div className='app container'>\n          <h1>Weather App</h1>\n          <Display data={this.state}/>\n          <Form setData={this.setData}/>\n        </div>\n      );\n    }\n  }\n\n  export { App }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { App } from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className='body container'>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}